[{"C:\\Users\\Saana\\fe\\finaltasksr\\src\\components\\Trainings.js":"1","C:\\Users\\Saana\\fe\\finaltasksr\\src\\components\\Customers.js":"2","C:\\Users\\Saana\\fe\\finaltasksr\\src\\reportWebVitals.js":"3","C:\\Users\\Saana\\fe\\finaltasksr\\src\\components\\AddCustomer.js":"4","C:\\Users\\Saana\\fe\\finaltasksr\\src\\components\\AddTraining.js":"5","C:\\Users\\Saana\\fe\\finaltasksr\\src\\components\\EditCustomer.js":"6","C:\\Users\\Saana\\fe\\finaltasksr\\src\\App.js":"7","C:\\Users\\Saana\\fe\\finaltasksr\\src\\components\\Calendar.js":"8"},{"size":2796,"mtime":1607884307914,"results":"9","hashOfConfig":"10"},{"size":4821,"mtime":1607885536243,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1606757463805,"results":"12","hashOfConfig":"10"},{"size":3240,"mtime":1607875953706,"results":"13","hashOfConfig":"10"},{"size":2381,"mtime":1607881900526,"results":"14","hashOfConfig":"10"},{"size":3947,"mtime":1607874941621,"results":"15","hashOfConfig":"10"},{"size":1061,"mtime":1607881028132,"results":"16","hashOfConfig":"10"},{"size":0,"mtime":1607878753012,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kz8g13",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Saana\\fe\\finaltasksr\\src\\components\\Trainings.js",[],"C:\\Users\\Saana\\fe\\finaltasksr\\src\\components\\Customers.js",[],"C:\\Users\\Saana\\fe\\finaltasksr\\src\\reportWebVitals.js",[],"C:\\Users\\Saana\\fe\\finaltasksr\\src\\components\\AddCustomer.js",["37"],"C:\\Users\\Saana\\fe\\finaltasksr\\src\\components\\AddTraining.js",["38"],"import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nfunction AddTraining(props) {\r\n    const [training, setTraining] = React.useState({ \r\n        date: '', \r\n        duration: '', \r\n        activity: '', \r\n        customer: ''\r\n        })\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleSave = () => {\r\n      console.log(training);\r\n      props.addTraining(training);\r\n      handleClose();\r\n    }\r\n\r\n    const inputChanged = (event) => {\r\n      setTraining({...training, \r\n        [event.target.name]: event.target.value, \r\n        customer: props.params.value[0].href})\r\n    }    \r\n\r\n    return(\r\n      <div>\r\n        <Button size=\"small\" style={{ margin: 10 }} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n          Add training\r\n        </Button>\r\n        <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle >New training</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Date\"\r\n            name=\"date\"\r\n            value={training.date}\r\n            onChange={inputChanged}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Activity\"\r\n            name=\"activity\"\r\n            value={training.activity}\r\n            onChange={inputChanged}\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Duration\"\r\n            name=\"duration\"\r\n            value={training.duration}\r\n            onChange={inputChanged}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSave} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>   \r\n    )\r\n}\r\n\r\nexport default AddTraining;","C:\\Users\\Saana\\fe\\finaltasksr\\src\\components\\EditCustomer.js",["39"],"import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nfunction EditCustomer(props) {\r\n    const [customer, setCustomer] = React.useState({ \r\n        firstname: '', \r\n        lastname: '', \r\n        streetaddress: '', \r\n        postcode: '', \r\n        city: '', \r\n        email: '',\r\n        phone: ''\r\n    })\r\n    \r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setCustomer({\r\n            firstname: props.params.data.firstname,\r\n            lastname: props.params.data.lastname,\r\n            streetaddress: props.params.data.streetaddress,\r\n            postcode: props.params.data.postcode,\r\n            city: props.params.data.city,\r\n            email: props.params.data.email,\r\n            phone: props.params.data.phone\r\n        })\r\n  \r\n      \r\n        console.log(props.params)\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    const handleSave = () => {\r\n      props.updateCustomer(props.params.value[0].href, customer);\r\n        handleClose();\r\n    }\r\n\r\n    const inputChanged = (event) => {\r\n      setCustomer({...customer, [event.target.name]: event.target.value})\r\n    }    \r\n\r\n    return(\r\n        <div>\r\n          <IconButton color=\"primary\" onClick={handleClickOpen}>\r\n          <EditIcon fontSize=\"small\" />\r\n          </IconButton>\r\n          <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle >Update customer</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"First name\"\r\n              name=\"firstname\"\r\n              value={customer.firstname}\r\n              onChange={inputChanged}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Last name\"\r\n              name=\"lastname\"\r\n              value={customer.lastname}\r\n              onChange={inputChanged}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Street address\"\r\n              name=\"streetaddress\"\r\n              value={customer.streetaddress}\r\n              onChange={inputChanged}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Postcode\"\r\n              name=\"postcode\"\r\n              value={customer.postcode}\r\n              onChange={inputChanged}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"City\"\r\n              name=\"city\"\r\n              value={customer.city}\r\n              onChange={inputChanged}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              value={customer.email}\r\n              onChange={inputChanged}\r\n              fullWidth\r\n            />\r\n             <TextField\r\n              margin=\"dense\"\r\n              label=\"Phone\"\r\n              name=\"phone\"\r\n              value={customer.phone}\r\n              onChange={inputChanged}\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={handleSave} color=\"primary\">\r\n              Save\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>   \r\n      )\r\n  }\r\n\r\n\r\nexport default EditCustomer;","C:\\Users\\Saana\\fe\\finaltasksr\\src\\App.js",[],["40","41"],"C:\\Users\\Saana\\fe\\finaltasksr\\src\\components\\Calendar.js",[],{"ruleId":"42","severity":1,"message":"43","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":24},{"ruleId":"42","severity":1,"message":"43","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":24},{"ruleId":"42","severity":1,"message":"43","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":24},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-global-assign","no-unsafe-negation"]